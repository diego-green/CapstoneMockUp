@page "/Dashboard"
@model DashboardModel

<main class="dashboard">
    <h2 class="h2">Home Dashboard</h2>

    <section class="grid">
        <div class="card p-4 position-relative" style="width:100%;">
            <div class="card-inner text-center">
                <div class="chip">Honeywell Project 1</div>

                <!-- Upload PDF -->
                <form method="post"
                      enctype="multipart/form-data"
                      asp-page-handler="UploadPdf"
                      class="mt-3 d-flex gap-2 justify-content-center flex-wrap">
                    <input type="file" name="pdfFile" accept=".pdf"
                           class="form-control" style="max-width:420px" required />
                    <button type="submit" class="btn btn-primary">Upload PDF</button>
                </form>
                <small class="text-muted d-block mt-1">
                    Upload a PDF. We’ll convert each page to an image and auto-play the slides.
                </small>

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-warning mt-3 text-start">
                        @foreach (var kv in ViewData.ModelState)
                        {
                            foreach (var err in kv.Value.Errors)
                            {
                                <div>@err.ErrorMessage</div>
                            }
                        }
                    </div>
                }

                <!-- Slideshow (from converted PNGs) -->
                @if (Model.SlideUrls?.Count > 0)
                {
                    <div class="mt-3" style="width:100%; max-width:1100px; margin:0 auto;">
                        <div id="slideShell" class="slide-shell">
                            <img id="slideImg" alt="Slide" />
                            <div class="controls">
                                <button type="button" class="btn btn-sm btn-light" id="prevBtn">Prev</button>
                                <button type="button" class="btn btn-sm btn-light" id="playPauseBtn">Pause</button>
                                <button type="button" class="btn btn-sm btn-light" id="nextBtn">Next</button>
                                <span id="pageLabel" class="badge bg-dark ms-2">1 / @Model.SlideUrls.Count</span>
                                <span class="ms-3 text-light">Interval</span>
                                <input type="number" id="intervalInput" min="1" value="4" class="form-control form-control-sm" style="width:70px" />
                                <span class="text-light">sec</span>
                                <button type="button" class="btn btn-sm btn-outline-light ms-3" id="fullscreenBtn" title="Full screen">⤢</button>
                            </div>
                        </div>

                        <style>
                            .slide-shell {
                                position: relative;
                                background: #000;
                                border-radius: 14px;
                                overflow: hidden;
                                box-shadow: 0 8px 30px rgba(0,0,0,.35);
                            }

                            #slideImg {
                                width: 100%;
                                height: 75vh;
                                object-fit: contain; /* keeps aspect ratio, letterboxes horizontally like PPT */
                                background: #000;
                                display: block;
                            }

                            .controls {
                                position: absolute;
                                right: 12px;
                                bottom: 12px;
                                display: flex;
                                align-items: center;
                                gap: 8px;
                                padding: 6px 10px;
                                background: rgba(0,0,0,.35);
                                border-radius: 999px;
                                color: #fff;
                                backdrop-filter: blur(2px);
                            }
                        </style>

                        <script>
                            (function () {
                                const slides = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SlideUrls));
                                let idx = 0;
                                let playing = true;
                                let timer = null;

                                const img = document.getElementById("slideImg");
                                const pageLabel = document.getElementById("pageLabel");
                                const prevBtn = document.getElementById("prevBtn");
                                const nextBtn = document.getElementById("nextBtn");
                                const playPauseBtn = document.getElementById("playPauseBtn");
                                const intervalInput = document.getElementById("intervalInput");
                                const fullscreenBtn = document.getElementById("fullscreenBtn");
                                const shell = document.getElementById("slideShell");

                                function show(i) {
                                    idx = (i + slides.length) % slides.length;
                                    img.src = slides[idx];
                                    pageLabel.textContent = (idx + 1) + " / " + slides.length;
                                }

                                function start() {
                                    stop();
                                    const ms = Math.max(1000, parseInt(intervalInput.value || "4") * 1000);
                                    timer = setInterval(() => show(idx + 1), ms);
                                }
                                function stop() { if (timer) clearInterval(timer); timer = null; }

                                prevBtn.addEventListener("click", () => { stop(); show(idx - 1); if (playing) start(); });
                                nextBtn.addEventListener("click", () => { stop(); show(idx + 1); if (playing) start(); });
                                playPauseBtn.addEventListener("click", () => {
                                    playing = !playing;
                                    playPauseBtn.textContent = playing ? "Pause" : "Play";
                                    if (playing) start(); else stop();
                                });
                                intervalInput.addEventListener("change", () => { if (playing) start(); });

                                // Fullscreen
                                fullscreenBtn.addEventListener("click", () => {
                                    if (!document.fullscreenElement) shell.requestFullscreen?.();
                                    else document.exitFullscreen?.();
                                });

                                // Keyboard shortcuts
                                window.addEventListener("keydown", (e) => {
                                    if (e.target && (e.target.tagName === "INPUT" || e.target.tagName === "TEXTAREA")) return;
                                    if (e.key === "ArrowLeft") { e.preventDefault(); prevBtn.click(); }
                                    if (e.key === "ArrowRight") { e.preventDefault(); nextBtn.click(); }
                                    if (e.key === " " || e.code === "Space") { e.preventDefault(); playPauseBtn.click(); }
                                });

                                // Init
                                show(0);
                                start();
                            })();
                        </script>
                    </div>
                }
                else
                {
                    <p class="text-muted mt-3">No slides yet. Upload a PDF above.</p>
                }
            </div>
        </div>
        <div class="right-col">

            <!-- Announcement -->
            <div class="card"
                 hx-get="/Dashboard/AnnouncementsPartial"
                 hx-trigger="load"
                 hx-swap="innerHTML">
                <div class="card-inner">
                    <h3>Announcement Board</h3>
                    @if (User?.Identity?.IsAuthenticated ?? false)
                    {
                        <form method="get" asp-page="/Edit-Add-Announcement"
                              class="position-absolute" style="top:10px; right:10px;">
                            <button type="submit" class="btn btn-sm btn-light rounded-pill">
                                Edit/Add
                            </button>
                        </form>
                    }
                    @if (Model.LatestAnnouncement != null)
                    {
                        <div class="mt-3 text-start">
                            <strong>@User.Identity.Name</strong>
                            <p>@Model.LatestAnnouncement</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Temperature -->
            <div class="card metric"
                 hx-get="/Dashboard/TemperaturePartial"
                 hx-trigger="load, every 10s"
                 hx-swap="innerHTML">
                <div class="card-inner metric-inner">
                    <div class="metric-title">T: -- °C</div>
                    <div class="bar"><div class="bar-fill" style="width:0%"></div></div>
                </div>
            </div>

            <!-- Humidity -->
            <div class="card metric"
                 hx-get="/Dashboard/HumidityPartial"
                 hx-trigger="load, every 10s"
                 hx-swap="innerHTML">
                <div class="card-inner metric-inner">
                    <div class="metric-title">RH: --%</div>
                    <div class="bar bar-danger"><div class="bar-fill" style="width:0%"></div></div>
                </div>
            </div>
        </div>
    </section>
</main>
